generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String    @unique
  password        String
  role            String    @default("user")
  resetToken      String?
  resetTokenExpiry DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  attorney        Attorney?
}

model Attorney {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  userId        String        @unique @db.ObjectId
  user          User          @relation(fields: [userId], references: [id])
  firstName     String
  lastName      String
  email         String
  phone         String
  address       String?
  city          String?
  state         String?
  zip           String?
  barNumber     String?
  caseManagers  CaseManager[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model CaseManager {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  email       String
  phone       String
  attorneyId  String    @db.ObjectId
  attorney    Attorney  @relation(fields: [attorneyId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Status {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  color     String
  patients  Patient[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Payer {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  patients  Patient[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Patient {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName       String
  lastName        String
  middleName      String?
  dateOfBirth     DateTime
  phone           String
  altNumber       String?
  email           String?
  gender          String?
  address         String?
  city            String?
  zip             String?
  statusId        String?       @db.ObjectId
  status          Status?       @relation(fields: [statusId], references: [id])
  payerId         String?       @db.ObjectId
  payer           Payer?        @relation(fields: [payerId], references: [id])
  lawyer          String?
  orderDate       DateTime?
  orderFor        String?
  appointments    Appointment[]
  cases           Case[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Appointment {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  patientId   String    @db.ObjectId
  patient     Patient   @relation(fields: [patientId], references: [id])
  date        DateTime
  time        String
  type        String
  status      String    @default("scheduled")
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Case {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  patientId   String    @db.ObjectId
  patient     Patient   @relation(fields: [patientId], references: [id])
  caseNumber  String    @unique
  status      String    @default("open")
  filingDate  DateTime?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  dueDate     DateTime?
  status      String    @default("pending")
  priority    String    @default("medium")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Facility {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  address     String
  city        String
  state       String
  zip         String
  phone       String
  fax         String?
  email       String?
  mapLink     String?
  status      String    @default("active")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Doctor {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  prefix      String?
  name        String
  phoneNumber String?
  faxNumber   String?
  email       String    @unique
  clinicName  String?
  address     String?
  mapLink     String?
  status      String    @default("Active")
  hasLogin    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
} 